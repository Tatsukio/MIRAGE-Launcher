<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>